<!-- node.js러는걸 통해서 js설치 안해도 서버 기능 구현 가능
>> 엄청 많이 써먹을거임


Module Counts란?:
	미리짜여진 코드 >> 처음부터 코드를짜지 않고 쇼핑하듯담음 > 이것이npm install뭐시기!!
	코딩은 직접짜기보다 긁어오는게 중요함


오류메세지를 그대로 구글에 치면 나오는경우가 많다.(물론 파일 이름같은거는 다 지워야 한다.)



npm이란?:
	모든 코드를 다 짜는게 아니니까 npm 으로 함 왠만한 모듈은 다 이미 개발이 되어 있음 ㅋㅋ 

	package.json은 현재 내가 어떤 모듈을 사용하고 있는지 대략적으로 나와있는거고
	package-lock.json은 위의 상세버젼임


웹프레임워크:
	프론트엔드에서 요청하고 백엔드에서 응답 이런 웹 프레임워크를 이용하는게 express의 역할임

npm uninstall:
	모듈 삭제 >> 피글렛같이 쓸데없는 모듈 삭제해버리기!

express 사용:
	app.post로 /주소에 들어온 사람에게 xx를 줌
	
app.listen이란?:
	포트에 대한이해가 필요함 프트는 선착장임 노트북에서도 usb포트 hdmi포트 따로 있음
	3000번도 있고 80번도 있고 등등  서버에 들어가는 입구가 여러개고 그 입구가 포트임!
	ip는 대표번호고 port는 내선번호라고 생각하면 댐!
	일반적으로 포트는 무엇을 쓸지 정해져 있음 번호마다 다른걸 줄수 있음!
	
          app.listen(port, () => {
	console.log("Example app listening on port ${port}")
)}
하면 지금 port 번째 포트를 듣고 있다 즉, 받아들일 준비가 되어 있다 이런뜻임 대충 ㅇㅋ? 콘솔.log부분은 그냥 출력하는거라서
기능적인 의미는 없음!


	[nodemon] app crashed - waiting for file changes before starting... << 이거 뭐노? node index.js하면 서버 실행되는데 
npm  start하면 저렇게 오류가 뜸 //메인서버에 figlet 변수지정을 했는데 내가 나중에 figlet을 uninstall 했기 때문임


app.get('/',()=>{})
여기서 get은 http메소드, '/'는 라우팅, ()=>{}는 콜백 함수임

http메소드란?:
	요청의 목적, 종류를 알리는 수단임 get과 post방식이 있음
	get: 주소창 남김
	post:주소창이 아니라 바디에 어떤 정보를 담아서 요청을 보내는 것이다.

라우팅:
	유튜브/체널/132124뭐시기뭐시기 >> 이런게 라우팅임

콜백함수:
	함수(끝내고 실행할 함수)  ()=>{} 첫번째꺼 다음에 두번째껄 하겠다~!!


res.send('hello world') 와 같은 콜백 함수 안에다가 <h1></h1>와 같은 html 태그도 넣을 수 있고 
<a href ="www.youtube.com")과 같은 링크도 넣을수 있다.

axios 는 express 요청
express는 응답하는거임
----------------------------------------------------------------------------------------------------------------
json이란?:
	자바스크립트 오브젝트 노테이션

이세상에 유튜브 하는사람이 너무 많음 >> 그럴때마다 코드를 존나 많이 만드는건 말이 안댐 그래서 변수지정을 해줄거임
app.get('/user/:id', (req,res) => {
	res.json({'sound':"멍멍"})
})
여기서id가 파라미터 즉, 변수이다.


params와 query:
	params 는 변수로 라우팅지정가능
	query 는 ? 를 이용하여 터미널에 띄우기 가능, &사용

cors:
   html 이 들러오면 오류가 남 > npm cors모듈을 설치해야 함(이미 깔려있음)
	npm install cors 로 모듈을 다운받고 나서 app.use(cors())를 하면 모든 파일을 다 허용함
	근데 cors() 안에 파일을 넣으면 그 파일에서 오는건 다 컷해버리는 그런 모듈임!


jwt:
	<!-- 토큰값을 헤더에 담아서 보낸다. 그리고 미들웨어에서 처리를 해서 토큰이 유효한지 확인하고
유효하다면 다음 작업을 할 수 있게 하고 안되면 에러로 돌려보냄 -->




sql에 대해서:
	sql은 db와의 대화이다. 엑셀파일과 같다고 생각하면 댐 sql에는 postgresql, mysql, sqlite등등이 있다
	nonsql에는 mongodb ,dynamodb등이 있다. 

ㅡ행(row) l열(column) 

간단한 spl커맨드로는 select가 있음   예를 들어 student 테이블 유저의 모든 이메일을 가지고 오고 싶다면:
	SELECT email FROM students; 가 되는것임

만약 21살 이상의 학생의 이메일을 테이블에서 가져오고 싶다? 
	SELECT email FROM students WHERE age > 21; 이렇게 치면 대는 것임 

만일 네이버이메일을 가진 학생dml 나이를 테이블에서 데려오고 싶다면?
	SELECT age FROM students WHERE email LIKE "%naver.com";

이번엔 15~18세 사이의 학생들만 찾고싶다면?
	SELECT age R





 